{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchMatches","a","fetch","process","response","json","data","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aeca55b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './MatchDetailCard.scss' ;\r\n\r\nexport const MatchDetailCard = ({ teamName, match }) =>\r\n{\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}` ;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    \r\n    return (\r\n\r\n         <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n\r\n            <div>\r\n                <span>vrs</span>\r\n\r\n                <h1> \r\n                    <Link to={otherTeamRoute}> {otherTeam} </Link>\r\n                </h1>\r\n\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n           \r\n            </div> \r\n\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1}, {match.umpire2}</p>\r\n          </div>       \r\n        \r\n        </div>\r\n        \r\n    );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({ match, teamName }) =>\r\n{\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n\r\n            <h3> vrs\r\n\r\n                <Link to={otherTeamRoute}>  {otherTeam}  </Link>\r\n                \r\n            </h3>\r\n            <p>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n\r\n        </div>\r\n    );\r\n}","import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\r\n\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nimport './TeamPage.scss' ;\r\n\r\nexport const TeamPage = () =>\r\n{\r\n    const [team, setTeam] = useState({ matches: [] });\r\n    const { teamName } = useParams();\r\n\r\n\r\n    useEffect(\r\n        () =>\r\n        {\r\n            const fetchMatches = async () =>\r\n            {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            }\r\n            fetchMatches();\r\n\r\n\r\n        }, [teamName]\r\n    );\r\n\r\n    if (!team || !team.teamName)\r\n    {\r\n        return <h1>Team not found </h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n\r\n            <div className=\"team-name-section\">\r\n                \r\n                <h1 className=\"team-name\"> {team.teamName} </h1>\r\n\r\n            </div>\r\n\r\n            <div className=\"win-loss-section\">\r\n                Wins / Losses\r\n\r\n                    <PieChart\r\n                         data={[\r\n                            { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n                            { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n                        ]}\r\n                     />\r\n            </div>\r\n\r\n            <div className=\"match-detail-section\">\r\n\r\n                <h3>Latest Matches</h3>\r\n\r\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n\r\n            </div>   \r\n            \r\n                {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n            \r\n            <div className=\"more-link\">\r\n\r\n                <Link to={`/teams/${teamName}/matches/${ process.env.REACT_APP_DATA_END_YEAR}`}>\r\n                        \r\n                        More >>\r\n                </Link>\r\n                \r\n                            \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./YearSelector.scss\";\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n\r\n    let years = [];\r\n\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++ ) {\r\n        years.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <ol className=\"YearSelector\">\r\n\r\n        { years.map(year => (\r\n\r\n            <li key={year} > \r\n                \r\n                <Link to={`/teams/${teamName}/matches/${year}`}>\r\n\r\n                    {year}\r\n\r\n                </Link>\r\n            </li>\r\n        )) }\r\n\r\n        </ol>\r\n    )\r\n\r\n\r\n}","import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { YearSelector } from \"../components/YearSelector\";\r\n\r\nimport  \"./MatchPage.scss\";\r\n\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState( [] );\r\n    const { teamName, year } = useParams();\r\n    useEffect(\r\n        () => {\r\n         const fetchMatches = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n            const data = await response.json();\r\n            setMatches(data);\r\n         };\r\n         \r\n         fetchMatches();\r\n\r\n        }, [teamName, year]\r\n    );\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"MatchPage\">\r\n\r\n            <div className=\"year-selector\">\r\n                   <h3> Select Year </h3>\r\n                   <YearSelector teamName={teamName} /> \r\n\r\n            </div>\r\n\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} Matches in {year} </h1>\r\n            {\r\n                 matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n            }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n} \r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './TeamTile.scss';\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                    <Link to={`/teams/${teamName}`}>\r\n                        {teamName}\r\n                    </Link>\r\n                </h1>\r\n        </div>\r\n    )\r\n} ","import { React, useEffect, useState } from 'react';\r\n\r\n\r\nimport './HomePage.scss';\r\n\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    useEffect(\r\n        () => {\r\n         const fetchAllTeams = async () => {\r\n            const response = await  fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n            const data = await response.json();\r\n            setTeams(data);\r\n\r\n         };\r\n         fetchAllTeams();\r\n\r\n\r\n\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\"> Indian Premier League Dashboard</h1>\r\n            </div>\r\n\r\n            <div className=\"team-grid\">\r\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","\nimport './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\n\nfunction App()\n{\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Switch>\n\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}